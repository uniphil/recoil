"use strict";function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function createUpdater(e){return Object.getOwnPropertySymbols(e).concat(Object.keys(e)).filter(function(t){return"function"!=typeof e[t]}).forEach(function(t){throw new Error("Expected a function for action '"+t.toString()+"' but found '"+e[t].toString()+"'")}),function(t,r,n){return(e[r]||function(e){return e})(t,n)}}function updateDOM(e,t,r){if("TextNode"===r.type)e.parentElement.replaceChild(document.createTextNode(r.content),e);else{if("DOMNode"!==r.type)throw new Error("Unknown tree type for "+JSON.stringify(r));if("DOMNode"!==t.type||"DOMNode"===t.type&&t.tagName!==r.tagName){var n=document.createElement(r.tagName);e.parentElement.replaceChild(n,e),e=n,t=dFactory(r.tagName)()}Object.keys(t.events).forEach(function(r){return e.removeEventListener(r,t.events[r])}),Object.keys(r.events).forEach(function(t){return e.addEventListener(t,r.events[t])}),Object.keys(t.attrs).forEach(function(t){return"value"===t?e.value="":e.removeAttribute(t)}),Object.keys(r.attrs).forEach(function(t){return"value"===t?e.value=r.attrs[t]:e.setAttribute(t,r.attrs[t])});for(var o,a,i=0;(o=t.children[i])&&(a=r.children[i]);i++)updateDOM(e.childNodes[i],o,a);for(var i=t.children.length;i<r.children.length;i++){var d=r.children[i];if("TextNode"===d.type)e.appendChild(document.createTextNode(d.content));else{if("DOMNode"!==d.type)throw new Error("Unknown node type for node: "+JSON.stringify(d));e.appendChild(document.createElement(d.tagName)),updateDOM(e.lastChild,dFactory(d.tagName)(),d)}}for(var i=r.children.length;i<t.children.length;i++)e.removeChild(e.lastChild)}return e}function render(e,t,r,n){function o(){d||(d=!0,requestAnimationFrame(function(){try{n=updateDOM(n,c,c=e(i,u))}finally{d=!1}}))}var a,i=t,d=!1,c=dFactory(n.tagName)(),u=function s(e,t){if(a)throw new Error("'"+e.toString()+"' was dispatched while '"+a.toString()+"' was still updating. Updaters should be pure functions and must not dispatch actions.");try{a=e,i=r(i,e,t)}finally{a=null}return o(),s}()}var dFactory=function(e){return function(t,r){if(t&&Array.isArray(t))throw new Error("Expected an Object for props but found an Array: '"+JSON.stringify(t)+"'\nDid you forget to put an empty '{}' for props before the child array?");if(t&&Object.keys(t).some(function(e){return-1===["events","attrs"].indexOf(e)}))throw new Error("Invalid key found in props {"+Object.keys(t).join(": ..., ")+": ...} for DOMNode '"+e+"'\nOnly 'attrs' and 'events' are allowed -- did you forget to nest your attribute or event inside one of those?");if(r&&!Array.isArray(r))throw new Error("Expected an Array for children but found "+JSON.stringify(r));return{type:"DOMNode",tagName:e.toUpperCase(),events:t&&t.events||{},attrs:t&&t.attrs||{},children:r||[]}}},nodeNames=["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr"],d=nodeNames.map(function(e){return _defineProperty({},e,dFactory(e))}).reduce(function(e,t){return Object.assign(e,t)}),t=function(e){return{type:"TextNode",content:e}};module.exports={d:d,t:t,createUpdater:createUpdater,render:render};